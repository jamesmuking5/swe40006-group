# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main", "ci-setup"]
  pull_request:
    branches: ["main"]

jobs:
  backend-CI:
    name: Node.js Automated Unit Tests
    runs-on: ubuntu-latest

    # Since backend is in /backend folder
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test with docker-compose
        run: |
          docker-compose up -d mongodb
          docker-compose build app
          docker-compose up -d app
          sleep 10
          # Basic health check
          curl -f http://localhost:8000/ || exit 1
          # Run security scan (without failing the build on non-main branches)
          docker-compose run security-scan || true
          # Shutdown
          docker-compose down
